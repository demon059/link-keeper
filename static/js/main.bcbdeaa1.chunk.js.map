{"version":3,"sources":["components/Header.js","components/Link.js","components/Links.js","components/Form.js","components/Footer.js","components/Notice.js","views/About.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","onAdd","enableFormAddLink","className","location","useLocation","icon","faLink","pathname","onClick","faPlusCircle","defaultProps","Link","link","handleDeleteLink","handleCopyLink","href","target","faArrowRight","e","id","stopPropagation","faTrash","desc","Links","links","msgNotificate","length","map","Form","addLink","useState","setTitle","setLink","setDesc","onSubmit","preventDefault","alert","type","value","onChange","rows","cols","Footer","props","to","Notice","msg","enableNotificate","classNotice","About","App","setLinks","setEnableFormAddLink","setEnableNotificate","setMsgNotificate","classNotificate","setClassNotificate","useEffect","a","fetchLinks","linksFromServer","getLinks","fetch","res","json","data","window","confirm","method","filter","item","handleAddLink","headers","body","JSON","stringify","setTimeout","handleOnLinkForCopy","navigator","clipboard","writeText","then","path","exact","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcbdeaa1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n// router\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// styles\r\nimport '../scss/components/Header.scss'\r\n\r\nconst Header = ({ title, onAdd, enableFormAddLink }) => {\r\n    let className = 'btn add icon'\r\n    if (enableFormAddLink) {\r\n        className += ' red'\r\n    } else {\r\n        className += ' orange'\r\n    }\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header>\r\n            <div className='link-keeper__header'>\r\n                <h1>\r\n                    <FontAwesomeIcon icon={faLink} /> {title}\r\n                    <small>Just click on white box for copy</small>\r\n                </h1>\r\n                {location.pathname === '/' && (\r\n                    <button className={className} onClick={onAdd}>\r\n                        <FontAwesomeIcon icon={faPlusCircle} />\r\n                        {enableFormAddLink ? 'Close' : 'Add'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = { title: 'Link keeper' }\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    handleAddLink: PropTypes.func,\r\n}\r\n\r\nexport default Header\r\n","import PropTypes from 'prop-types'\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// styles\r\nimport '../scss/components/Link.scss'\r\n\r\nconst Link = ({ link, handleDeleteLink, handleCopyLink }) => {\r\n    const onClick = (e, id) => {\r\n        e.stopPropagation()\r\n        handleDeleteLink(id)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='link-keeper__list-item'\r\n            onClick={() => handleCopyLink(link.link)}\r\n        >\r\n            <div className='link-keeper__list-item-header'>\r\n                <div className='link-keeper__list-item-title'>\r\n                    {link.title}\r\n                    <small>{link.link}</small>\r\n                </div>\r\n                <div className='link-keeper__list-item-actions'>\r\n                    <a href={link.link} target='_blank'>\r\n                        <button className='btn circle orange-200'>\r\n                            <FontAwesomeIcon icon={faArrowRight} />\r\n                        </button>\r\n                    </a>\r\n                    <button\r\n                        className='btn circle orange-200'\r\n                        onClick={(e) => onClick(e, link.id)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='link-keeper__list-item-desc'>{link.desc}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLink.propTypes = {\r\n    link: PropTypes.object,\r\n    handleDeleteLink: PropTypes.func,\r\n    copyLink: PropTypes.func,\r\n}\r\n\r\nexport default Link\r\n","import PropTypes from 'prop-types'\r\n\r\n// components\r\nimport Link from './Link'\r\n\r\n// styles\r\nimport '../scss/components/Links.scss'\r\n\r\nconst Links = ({ links, handleDeleteLink, handleCopyLink, msgNotificate }) => {\r\n    return (\r\n        <div className='link-keeper__list'>\r\n            {links.length > 0 ? (\r\n                <div className='link-keeper__list-outside'>\r\n                    <div className='link-keeper__list-inside'>\r\n                        {links.map((link) => (\r\n                            <Link\r\n                                link={link}\r\n                                key={link.id}\r\n                                handleDeleteLink={handleDeleteLink}\r\n                                handleCopyLink={handleCopyLink}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='link-keeper__list-empty'>No links :(</div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nLinks.propTypes = {\r\n    links: PropTypes.array,\r\n    handleDeleteLink: PropTypes.func,\r\n    handleCopyLink: PropTypes.func,\r\n    msgNotificate: PropTypes.string,\r\n}\r\n\r\nexport default Links\r\n","import PropTypes from 'prop-types'\r\n\r\n// state\r\nimport { useState } from 'react'\r\n\r\n// styles\r\nimport '../scss/components/Form.scss'\r\n\r\nconst Form = ({ addLink }) => {\r\n    const [title, setTitle] = useState('')\r\n    const [link, setLink] = useState('')\r\n    const [desc, setDesc] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!link) {\r\n            alert('Please add a link')\r\n            return\r\n        }\r\n\r\n        addLink({ title, link, desc })\r\n\r\n        setTitle('')\r\n        setLink('')\r\n        setDesc('')\r\n    }\r\n\r\n    return (\r\n        <div className='link-keeper__form'>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='link-keeper__form-control'>\r\n                    <label className='link-keeper__form-label'>\r\n                        Link title\r\n                    </label>\r\n                    <input\r\n                        type='text'\r\n                        className='link-keeper__form-input'\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='link-keeper__form-control'>\r\n                    <label className='link-keeper__form-label'>Link</label>\r\n                    <input\r\n                        type='text'\r\n                        className='link-keeper__form-input'\r\n                        value={link}\r\n                        onChange={(e) => setLink(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='link-keeper__form-control'>\r\n                    <label className='link-keeper__form-label'>\r\n                        Description\r\n                    </label>\r\n                    <textarea\r\n                        rows='3'\r\n                        cols='45'\r\n                        className='link-keeper__form-input'\r\n                        value={desc}\r\n                        onChange={(e) => setDesc(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='link-keeper__form-control'>\r\n                    <input\r\n                        type='submit'\r\n                        className='btn add orange'\r\n                        value='Add'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    addLink: PropTypes.func,\r\n}\r\n\r\nexport default Form\r\n","// router\r\nimport { Link } from 'react-router-dom'\r\n\r\n// styles\r\nimport '../scss/components/Footer.scss'\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className='link-keeper__footer'>\r\n            <Link to='/about'>About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import PropTypes from 'prop-types'\r\n\r\n// styles\r\nimport '../scss/components/Notice.scss'\r\n\r\nconst Notice = ({ msg, enableNotificate, classNotice }) => {\r\n    let className = 'link-keeper__notification '\r\n    if (classNotice) {\r\n        className += classNotice\r\n    }\r\n    if (enableNotificate) {\r\n        className += ' active'\r\n    }\r\n\r\n    return <div className={className}>{msg}</div>\r\n}\r\n\r\nNotice.propTypes = {\r\n    msg: PropTypes.string,\r\n    classNotice: PropTypes.string,\r\n    enableNotificate: PropTypes.bool,\r\n}\r\n\r\nexport default Notice\r\n","// router\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div className='link-keeper__content'>\r\n            <Link to='/'>Go back</Link>\r\n            <p>\r\n                <strong>Link-keeper</strong> was created to demonstrate basic\r\n                React.js skills that was got in short amount of time.\r\n            </p>\r\n            <p>\r\n                <strong>Opportunities this app:</strong>\r\n            </p>\r\n            <p>- addition new links</p>\r\n            <p>- deletion links</p>\r\n            <p>- copy link to clipboard when clicking on white box</p>\r\n            <p>- open selected link in a new window</p>\r\n            <p>- switch pages without reloading the page</p>\r\n            <br />\r\n            <br />\r\n            <p>Just enjoy! Thank you for watching my application :)</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","// state\nimport { useState, useEffect } from 'react'\n\n// router\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n// styles\nimport './scss/link-keeper.scss'\nimport './scss/button.scss'\n\n// components\nimport Header from './components/Header'\nimport Links from './components/Links'\nimport Form from './components/Form'\nimport Footer from './components/Footer'\nimport Notice from './components/Notice'\nimport About from './views/About'\n\nconst App = () => {\n    const [links, setLinks] = useState([])\n    const [enableFormAddLink, setEnableFormAddLink] = useState(false)\n    const [enableNotificate, setEnableNotificate] = useState(false)\n    const [msgNotificate, setMsgNotificate] = useState('')\n    const [classNotificate, setClassNotificate] = useState('')\n\n    useEffect(() => {\n        const getLinks = async () => {\n            const linksFromServer = await fetchLinks()\n            setLinks(linksFromServer)\n        }\n        getLinks()\n    }, [])\n\n    // Fetch links\n    const fetchLinks = async () => {\n        const res = await fetch('http://localhost:5000/links')\n        const data = await res.json()\n\n        return data\n    }\n\n    // Delete link\n    const handleDeleteLink = async (id) => {\n        const conf = window.confirm('Do you really want to remove the link?')\n        if (conf) {\n            await fetch(`http://localhost:5000/links/${id}`, {\n                method: 'DELETE',\n            })\n            setLinks(links.filter((item) => item.id !== id))\n        }\n    }\n\n    // Add link\n    const handleAddLink = async (link) => {\n        setEnableNotificate(false)\n        const res = await fetch('http://localhost:5000/links', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(link),\n        })\n\n        const data = await res.json()\n\n        setLinks([...links, data])\n\n        setClassNotificate('rose')\n        setMsgNotificate('Link added!')\n        setEnableNotificate(true)\n        setTimeout(() => {\n            setEnableNotificate(false)\n        }, 1000)\n    }\n\n    // Copy link\n    const handleOnLinkForCopy = (link) => {\n        setEnableNotificate(false)\n        navigator.clipboard.writeText(link).then(() => {\n            setClassNotificate('')\n            setMsgNotificate('Link copied!')\n            setEnableNotificate(true)\n            setTimeout(() => {\n                setEnableNotificate(false)\n            }, 1000)\n        })\n    }\n\n    return (\n        <Router>\n            <div className='page-container'>\n                <div className='link-keeper__container'>\n                    <Header\n                        title='Link keeper'\n                        enableFormAddLink={enableFormAddLink}\n                        onAdd={() => setEnableFormAddLink(!enableFormAddLink)}\n                    />\n\n                    <Route\n                        path='/'\n                        exact\n                        render={(props) => (\n                            <>\n                                {!enableFormAddLink && (\n                                    <Links\n                                        links={links}\n                                        handleDeleteLink={handleDeleteLink}\n                                        handleCopyLink={handleOnLinkForCopy}\n                                        msgNotificate={msgNotificate}\n                                    />\n                                )}\n                                {enableFormAddLink && (\n                                    <Form addLink={handleAddLink} />\n                                )}\n                                <Notice\n                                    msg={msgNotificate}\n                                    classNotice={classNotificate}\n                                    enableNotificate={enableNotificate}\n                                />\n                                <Footer />\n                            </>\n                        )}\n                    />\n                    <Route path='/about' component={About} />\n                </div>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}